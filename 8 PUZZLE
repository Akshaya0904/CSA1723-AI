from collections import deque

G = [[1,2,3],[4,5,6],[7,8,0]]
def nbs(s):
    x,y=[(i,j) for i in range(3) for j in range(3) if s[i][j]==0][0]
    for dx,dy in [(-1,0),(1,0),(0,-1),(0,1)]:
        nx,ny=x+dx,y+dy
        if 0<=nx<3 and 0<=ny<3:
            ns=[r[:] for r in s]
            ns[x][y],ns[nx][ny]=ns[nx][ny],ns[x][y]
            yield ns
def bfs(st):
    q=deque([[st]])
    v=set()
    while q:
        p=q.popleft()
        s=p[-1]
        if s==G:return p
        v.add(str(s))
        for nb in nbs(s):
            if str(nb) not in v:q.append(p+[nb])
st=[[1,2,3],[5,0,6],[4,7,8]]
for i,s in enumerate(bfs(st)):
    print(f"Step {i}:",*s,sep="\n")
    print()
